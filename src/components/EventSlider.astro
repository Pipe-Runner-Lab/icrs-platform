<section class="max-w-screen-lg mx-auto p-4 bg-gray-900 text-white">
  <div class="flex justify-between items-center mb-4">
    <h2 class="text-2xl font-bold">Events</h2>
    <div class="flex space-x-2" id="months-buttons">
      <!-- Month buttons will be dynamically inserted here -->
    </div>
    <div class="flex space-x-2">
      <button id="previous-month" class="p-2 bg-gray-700 rounded">‹</button>
      <button id="next-month" class="p-2 bg-gray-700 rounded">›</button>
    </div>
  </div>
  <div id="events-list" class="grid grid-cols-2 gap-4">
    <!-- Events will be dynamically inserted here -->
  </div>
</section>

<script>
  import { events } from "../lib/data";

  function initEvents() {
    const months = [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec",
    ];
    let currentMonth = 0;

    const serverEvents = events.map((event) => ({
      ...event,
      date: new Date(event.date).toLocaleDateString("en-US", {
        month: "short",
        day: "numeric",
      }),
    }));

    function renderMonths() {
      const monthsButtons = document.getElementById("months-buttons");
      monthsButtons!.innerHTML = months
        .map(
          (month, index) => `
        <button class="p-2 ${currentMonth === index ? "bg-customYellow text-gray-700" : "bg-gray-700"}" key=${index}>${month}</button>
      `
        )
        .join("");
    }

    function renderEvents() {
      const eventsList = document.getElementById("events-list");
      eventsList!.innerHTML = events
        .map(
          (event) => `
        <div class="p-4 bg-gray-800 rounded cursor-pointer" onclick="window.location.href='/events/${event.id}'">
          <span class="block text-customYellow">${event.date}</span>
          <span class="block text-xl font-bold">${event.title}</span>
        </div>
      `
        )
        .join("");
    }

    function showPreviousMonth() {
      currentMonth = (currentMonth - 1 + months.length) % months.length;
      renderMonths();
    }

    function showNextMonth() {
      currentMonth = (currentMonth + 1) % months.length;
      renderMonths();
    }

    document
      .getElementById("previous-month")!
      .addEventListener("click", showPreviousMonth);
    document
      .getElementById("next-month")!
      .addEventListener("click", showNextMonth);

    // Initial render
    renderMonths();
    renderEvents();
  }

  // Initial render when the page loads
  initEvents();
</script>
